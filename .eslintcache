[{"/home/elizabeth/Documents/shoppies/src/components/index.jsx":"1"},{"size":7376,"mtime":1610544451128,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1dknp9f","/home/elizabeth/Documents/shoppies/src/components/index.jsx",["7","8"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Search } from '@material-ui/icons';\nimport axios from 'axios';\nimport { NominationContext } from '../context/nomination';\nimport Nominations from './Nominations';\n\n\nconst Shoppies = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchList, setList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [nominations, setNominations] = useContext(NominationContext);\n    const [nominationList, setNominationList] = useState([]);\n    useEffect(() => {\n        setNominationList(Object.values(nominations));\n    }, [nominations]);\n    // const url = process.env.REACT_APP_API_BASE_URL;\n    // const apikey = process.env.REACT_APP_API_KEY;\n\n    const url = 'https://www.omdbapi.com/';\n    const apikey = 'e6eb40f2';\n\n    useEffect(() => {\n        if(searchTerm !== '' && searchTerm.length > 2) {\n            search(searchTerm);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [searchTerm]);\n\n\n      const handleChange = (e) => {\n        setSearchTerm(e.target.value);\n        setLoading(true);\n      }\n\n    const search = async (term) => {\n        const encodedTerm = encodeURIComponent(term);\n        const response = await axios.get(`${url}?s=${encodedTerm}&apikey=${apikey}&type=movie`);\n        \n        if(response.data.Response === \"True\") {\n            setList(response.data);\n        }\n        setLoading(false);\n    }\n\n    const handleNomination = (id, property) => {\n        if(nominations[id])  {\n            return;\n        }\n        setNominations((prev) => {\n            return { ...prev, [id]: property}\n        });\n    };\n\n    const removeNomination = (id) => {\n        const obj = nominations;\n        console.log('obj', obj);\n        delete obj[id];\n        console.log('obj', obj);\n        setNominations(() => {\n            return {...obj}\n        });\n    };\n\n    return(\n        <div className=\"md:w-7/12 m-auto py-10 px-5 md:px-0 h-full\">\n            <header className=\"mb-10\">\n                <h2 className=\"text-5xl font-medium\">The Shoppies</h2>\n            </header>\n            <section className=\"shadow bg-gray-900 p-5 flex flex-col\">\n                <label>Movie Name</label>\n                <div className=\"flex bg-gray-900 border border-gray-100 rounded p-2 my-5 items-center\">\n                    <Search />\n                    <input type=\"search\" placeholder=\"Search..\" value={searchTerm} onChange={handleChange} className=\"focus:outline-none bg-transparent pl-3 w-full\" />\n                </div>\n            </section>\n            {nominationList.length >= 5 && (\n\n                <section className=\"my-6 bg-purple-400 p-5 rounded-sm\">\n                    <h2 className>Well done you now have {nominationList.length} nominations</h2>\n                </section>\n            )}\n\n            <section className=\"grid md:grid-cols-2 grid-cols-1 gap-5 my-10\">\n                <section className=\"bg-white text-black p-5 shadow-lg rounded\">\n                    {searchTerm ? (\n                        <React.Fragment>\n                        <h3>Results for \"{searchTerm}\"</h3>\n\n                        {!loading ? (\n                            searchList.Response === \"True\" ? (\n                                <div className=\"h-bg overflow-y-auto\">\n                                    {searchList.Search.map((list) => (\n                                        <div className=\"border border-gray-300 rounded w-11/12 mx-auto p-3 my-8 grid grid-cols-1 md:grid-cols-2 gap-3\" key={list.imdbID}>\n                                            <div className=\"w-full\">\n                                                <img src={list.Poster}  alt={list.Title} className=\"object-cover w-full h-32\" />\n                                            </div>\n                                            <div>\n                                                <h5 className=\"text-xl\">{list.Title}</h5>\n                                                <p>{list.Year}</p>\n                                                <div className=\"text-right\">\n                                                    {!nominations[list.imdbID] ? (\n                                                        <button className=\"px-5 py-2 rounded-md bg-blue-300 focus:outline-none\" onClick={() => handleNomination(list.imdbID, list)}>\n                                                            Nominate\n                                                        </button>\n                                                    ) : (\n                                                        <button className=\"px-5 py-2 rounded-md border border-blue-300 focus:outline-none\" onClick={() => removeNomination(list.imdbID)}>\n                                                            Remove\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                    ))}\n                                    {/* <div className=\"text-right px-5\">\n                                        <button className=\"px-4 py-2 border border-gray-900 focus:outline-none mx-4\"  onClick={setPage(page - 1)}><KeyboardArrowLeft /> Prev</button>\n                                        <button className=\"px-4 py-2 bg-gray-900 text-white focus:outline-none mx-4\" onClick={setPage(page + 1)}>Next <KeyboardArrowRight /></button>\n                                    </div> */}\n                                </div>\n                            ) : (\n                                <h2 className=\"text-2xl text-center py-10\">Sorry! Couldn't find any movie. Please search again using another word.</h2>\n                            )) : (\n                            <div className=\"rounded-md p-4 max-w-sm w-full mx-auto my-8\">\n                                <div className=\"animate-pulse flex space-x-4\">\n                                    <div className=\"rounded-full bg-blue-200 h-12 w-12\"></div>\n                                        <div className=\"flex-1 space-y-4 py-1\">\n                                            <div className=\"h-4 bg-blue-200 rounded w-3/4\"></div>\n                                            <div className=\"space-y-2\">\n                                                <div className=\"h-4 bg-blue-200 rounded\"></div>\n                                                <div className=\"h-4 bg-blue-200 rounded w-5/6\"></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                            </div>\n                                \n                        )}\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                        <h2 className=\"text-2xl text-center py-10\">Please Search for a movie</h2>\n                        </React.Fragment>\n                    )}\n                </section>\n                <section className=\"bg-white text-black p-5 shadow-lg rounded\">\n                    <Nominations />\n                </section>\n            </section>\n        </div>\n    )\n}\n\nexport default Shoppies;\n",{"ruleId":"9","severity":2,"message":"10","line":35,"column":45,"nodeType":"11","messageId":"12","endLine":35,"endColumn":48},{"ruleId":"9","severity":2,"message":"13","line":35,"column":76,"nodeType":"11","messageId":"12","endLine":35,"endColumn":82},"no-undef","'url' is not defined.","Identifier","undef","'apikey' is not defined."]